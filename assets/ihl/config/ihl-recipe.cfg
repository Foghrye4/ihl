// <- This is a commentary.
; <- This is also a commentary.
// Syntax are simple as fist. Every recipe modifier must start from new line and keyword.
// Keywords are "addrecipe", "removerecipe" and "addcasting".
// "addcasting" is a special function to define amount of molten metal nessesary for castind certain parts.
// Syntax is "addcasting(name_of_a_part,amount_of_metal)". "name_of_a_part" is ore dictionary name 
// without material suffix.
// Do not include a metal name in "name_of_a_part"!
// It is "toolHeadHammer" not "toolHeadHammerBronze".
// For "addrecipe" and "removerecipe" right after keyword goes parameters. 
// Parameters are machine name (see in bottom of this file),
// recipeinput (with parameters) and recipeoutput (with parameters).
// All parameters are separated with "," symbol.
// For adding recipe add both input and output.
// For removing add any of those.
// Inside "recipeinput" and "recipeoutput" are parameters, separated with ",".
// For "recipeinput" those parameters are:
// itemstack(modname:internal_itemname,stacksize,damage)
// fluidcontainer(fluidname,minimal_amount)
// toolitemstack(modname:internal_itemname,stacksize,damage) //For iron workbench only
// machine(modname:internal_itemname) //For iron workbench only
// die(transverseSection)
// fiber(internal_itemname, length)
// wire(material, length, transverseSection)
// cable(material, length, transverseSection, insulationMaterial, insulationThickness, insulationBreakdownVoltage)
// tooloredict(oredict_entry,quantity) //For iron workbench only
// oredict(oredict_entry,quantity)
// fluidstack(fluid,quantity)
// First parameter are string, others are integer.
// For finding modname:internal_itemname, damage or ore dictionary entry use in-game 
// "ore dictionary item scanner" from IHL in creative mode. 
// For internal fluid names check universal fluid cells tooltip.
// For "recipeoutput" those parameters are:
// itemstack(modname:internal_itemname,stacksize,damage) Stacksize can be float.
// fiber(internal_itemname, length)
// wire(material, length, transverseSection)
// cable(material, length, transverseSection, insulationMaterial, insulationThickness, insulationBreakdownVoltage)
// fluidstack(fluid,quantity)
// Examples:

//addcasting
//(
//nozzle,
//864
//)

// To add custom forced casting recipe using any fluid and any itemstack (even those, who are not registered in ore dictionary):
//addrecipe
//(
//injectionmold,
//recipeinput(fluidstack(water,100),itemstack(ihl:injectionMold,1,hash(diamond))),
//recipeoutput(itemstack(minecraft:diamond,1,0))
//)
// "hash" will convert argument into string hash. 
// It is nessesary for casting recipes to contain itemstack damage matching "resultSuffix" string hash.

// To add casting form craft use "resultSuffix" NBT tag:
//addrecipe
//(
//ironworkbench,
//recipeinput(oredict(sand,1),fluidcontainer(water,1),oredict(dustClay,1)),
//recipeoutput(itemstack(ihl:injectionMold,1,24,tags(string(resultSuffix,diamond))))
//)

//addrecipe
//(
//evaporator,
//recipeinput(fluidstack(water,100)),
//recipeoutput(itemstack(minecraft:diamond,1,0))
//)

//addrecipe
//(
//wiremill,
//recipeinput(fluidstack(liquidglass,10),die(150)),
//recipeoutput(wire(Uran,10,100))
//)

//removerecipe
//(
//evaporator,
//recipeinput(fluidstack(saltwater,4000))
//)

//removerecipe
//(
//evaporator,
//recipeoutput(itemstack(ihl:item.ihlSimpleItem,1,144))
//)
